# 1 "lexer.mll"
 
  open Parser
  open Type

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\232\255\001\000\000\000\001\000\238\255\011\000\017\000\
    \000\000\016\000\018\000\019\000\000\000\000\000\253\255\254\255\
    \002\000\005\000\000\000\006\000\252\255\000\000\236\255\003\000\
    \000\000\011\000\251\255\029\000\247\255\245\255\243\255\239\255\
    \241\255\240\255\237\255\003\000\012\000\235\255\233\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\021\000\255\255\255\255\255\255\255\255\013\000\
    \011\000\009\000\007\000\005\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\006\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\000\000\255\255\
    \255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\016\000\016\000\016\000\016\000\016\000\000\000\016\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\
    \015\000\014\000\008\000\010\000\000\000\009\000\030\000\007\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\033\000\002\000\038\000\005\000\029\000\032\000\
    \028\000\027\000\000\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\000\000\
    \000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\
    \000\000\023\000\000\000\000\000\000\000\003\000\012\000\034\000\
    \017\000\004\000\021\000\020\000\035\000\031\000\022\000\024\000\
    \026\000\037\000\018\000\025\000\013\000\019\000\036\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\016\000\016\000\000\000\255\255\016\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\016\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\008\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\006\000\000\000\002\000\000\000\009\000\007\000\
    \010\000\011\000\255\255\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\012\000\255\255\255\255\255\255\000\000\000\000\004\000\
    \013\000\000\000\017\000\019\000\003\000\007\000\021\000\023\000\
    \025\000\036\000\013\000\024\000\000\000\018\000\035\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 13 "lexer.mll"
    ( token lexbuf )
# 122 "lexer.ml"

  | 1 ->
# 15 "lexer.mll"
    ( LPAREN )
# 127 "lexer.ml"

  | 2 ->
# 17 "lexer.mll"
    ( RPAREN )
# 132 "lexer.ml"

  | 3 ->
# 19 "lexer.mll"
    ( BOOL(true) )
# 137 "lexer.ml"

  | 4 ->
# 21 "lexer.mll"
    ( BOOL(false) )
# 142 "lexer.ml"

  | 5 ->
# 23 "lexer.mll"
    ( INT(int_of_string (Lexing.lexeme lexbuf)) )
# 147 "lexer.ml"

  | 6 ->
# 25 "lexer.mll"
    ( FLOAT(float_of_string (Lexing.lexeme lexbuf)) )
# 152 "lexer.ml"

  | 7 ->
# 27 "lexer.mll"
    ( PLUS )
# 157 "lexer.ml"

  | 8 ->
# 29 "lexer.mll"
    ( PLUS_DOT )
# 162 "lexer.ml"

  | 9 ->
# 31 "lexer.mll"
    ( MINUS )
# 167 "lexer.ml"

  | 10 ->
# 33 "lexer.mll"
    ( MINUS_DOT )
# 172 "lexer.ml"

  | 11 ->
# 35 "lexer.mll"
    ( TIMES )
# 177 "lexer.ml"

  | 12 ->
# 37 "lexer.mll"
    ( TIMES_DOT )
# 182 "lexer.ml"

  | 13 ->
# 39 "lexer.mll"
    ( DIVIDED )
# 187 "lexer.ml"

  | 14 ->
# 41 "lexer.mll"
    ( DIVIDED_DOT )
# 192 "lexer.ml"

  | 15 ->
# 43 "lexer.mll"
    ( DISJ )
# 197 "lexer.ml"

  | 16 ->
# 45 "lexer.mll"
    ( CONJ )
# 202 "lexer.ml"

  | 17 ->
# 47 "lexer.mll"
    ( EQUAL )
# 207 "lexer.ml"

  | 18 ->
# 49 "lexer.mll"
    ( IF )
# 212 "lexer.ml"

  | 19 ->
# 51 "lexer.mll"
    ( THEN )
# 217 "lexer.ml"

  | 20 ->
# 53 "lexer.mll"
    ( ELSE )
# 222 "lexer.ml"

  | 21 ->
# 55 "lexer.mll"
    ( EOF )
# 227 "lexer.ml"

  | 22 ->
# 57 "lexer.mll"
    ( EOF )
# 232 "lexer.ml"

  | 23 ->
# 59 "lexer.mll"
    ( EOF )
# 237 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

